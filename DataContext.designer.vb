'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.6400
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<System.Data.Linq.Mapping.DatabaseAttribute(Name:="puntodeventa")>  _
Partial Public Class Dao
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
    Partial Private Sub Insertfacvecab(instance As DataDao.facvecab)
    End Sub
    Partial Private Sub Updatefacvecab(instance As DataDao.facvecab)
    End Sub
    Partial Private Sub Deletefacvecab(instance As DataDao.facvecab)
    End Sub
    Partial Private Sub Insertdeposito(instance As DataDao.deposito)
    End Sub
    Partial Private Sub Updatedeposito(instance As DataDao.deposito)
    End Sub
    Partial Private Sub Deletedeposito(instance As DataDao.deposito)
    End Sub
    Partial Private Sub Insertstock(instance As DataDao.stock)
    End Sub
    Partial Private Sub Updatestock(instance As DataDao.stock)
    End Sub
    Partial Private Sub Deletestock(instance As DataDao.stock)
    End Sub
    Partial Private Sub Insertarticulo(instance As DataDao.articulo)
    End Sub
    Partial Private Sub Updatearticulo(instance As DataDao.articulo)
    End Sub
    Partial Private Sub Deletearticulo(instance As DataDao.articulo)
    End Sub
    Partial Private Sub Insertrubro(instance As DataDao.rubro)
    End Sub
    Partial Private Sub Updaterubro(instance As DataDao.rubro)
    End Sub
    Partial Private Sub Deleterubro(instance As DataDao.rubro)
    End Sub
    Partial Private Sub Insertdolar(instance As DataDao.dolar)
    End Sub
    Partial Private Sub Updatedolar(instance As DataDao.dolar)
    End Sub
    Partial Private Sub Deletedolar(instance As DataDao.dolar)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Alertas.My.MySettings.Default.EtertinConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property facvecabs() As System.Data.Linq.Table(Of DataDao.facvecab)
		Get
			Return Me.GetTable(Of DataDao.facvecab)
		End Get
	End Property
	
	Public ReadOnly Property params() As System.Data.Linq.Table(Of DataDao.param)
		Get
			Return Me.GetTable(Of DataDao.param)
		End Get
	End Property
	
	Public ReadOnly Property depositos() As System.Data.Linq.Table(Of DataDao.deposito)
		Get
			Return Me.GetTable(Of DataDao.deposito)
		End Get
	End Property
	
	Public ReadOnly Property stocks() As System.Data.Linq.Table(Of DataDao.stock)
		Get
			Return Me.GetTable(Of DataDao.stock)
		End Get
	End Property
	
	Public ReadOnly Property articulos() As System.Data.Linq.Table(Of DataDao.articulo)
		Get
			Return Me.GetTable(Of DataDao.articulo)
		End Get
	End Property
	
	Public ReadOnly Property rubros() As System.Data.Linq.Table(Of DataDao.rubro)
		Get
			Return Me.GetTable(Of DataDao.rubro)
		End Get
	End Property
	
	Public ReadOnly Property dolars() As System.Data.Linq.Table(Of DataDao.dolar)
		Get
			Return Me.GetTable(Of DataDao.dolar)
		End Get
	End Property
End Class

Namespace DataDao
	
	<Table(Name:="dbo.facvecab")>  _
	Partial Public Class facvecab
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _fac_codigo As Integer
		
		Private _fac_tipcom As String
		
		Private _fac_tipmov As String
		
		Private _fac_fecha As Date
		
		Private _fac_tipo As Char
		
		Private _fac_ptovta As Integer
		
		Private _fac_numero As Integer
		
		Private _cli_codigo As Integer
		
		Private _fac_descue As Decimal
		
		Private _fac_neto1 As Decimal
		
		Private _fac_neto2 As Decimal
		
		Private _fac_iva1 As Decimal
		
		Private _fac_iva2 As Decimal
		
		Private _fac_poriv1 As Decimal
		
		Private _fac_poriv2 As Decimal
		
		Private _fac_periva As Decimal
		
		Private _fac_perib As Decimal
		
		Private _fac_total As Decimal
		
		Private _fac_anulad As Boolean
		
		Private _cli_nombre As String
		
		Private _cli_cuit As String
		
		Private _iva_codigo As Integer
		
		Private _pro_codigo As Integer
		
		Private _cli_locali As String
		
		Private _cli_codpos As String
		
		Private _cli_domici As String
		
		Private _fac_cai As String
		
		Private _fac_caiven As System.Nullable(Of Date)
		
		Private _fac_hojas As Integer
		
		Private _asi_codigo As Integer
		
		Private _fac_forpag As Integer
		
		Private _fac_cuoimp As Decimal
		
		Private _fac_cuocan As Byte
		
		Private _fac_dolar As Decimal
		
		Private _fac_moneda As Char
		
		Private _usu_fecacc As Date
		
		Private _usu_codigo As Integer
		
		Private _pco_codigo As Short
		
		Private _fac_impint As Decimal
		
		Private _dep_codigo As Integer
		
		Private _fac_flete As Decimal
		
		Private _fac_recargo As Decimal
		
		Private _fac_descue1 As Decimal
		
		Private _fac_descue2 As Decimal
		
		Private _fac_fecven As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onfac_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onfac_codigoChanged()
    End Sub
    Partial Private Sub Onfac_tipcomChanging(value As String)
    End Sub
    Partial Private Sub Onfac_tipcomChanged()
    End Sub
    Partial Private Sub Onfac_tipmovChanging(value As String)
    End Sub
    Partial Private Sub Onfac_tipmovChanged()
    End Sub
    Partial Private Sub Onfac_fechaChanging(value As Date)
    End Sub
    Partial Private Sub Onfac_fechaChanged()
    End Sub
    Partial Private Sub Onfac_tipoChanging(value As Char)
    End Sub
    Partial Private Sub Onfac_tipoChanged()
    End Sub
    Partial Private Sub Onfac_ptovtaChanging(value As Integer)
    End Sub
    Partial Private Sub Onfac_ptovtaChanged()
    End Sub
    Partial Private Sub Onfac_numeroChanging(value As Integer)
    End Sub
    Partial Private Sub Onfac_numeroChanged()
    End Sub
    Partial Private Sub Oncli_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Oncli_codigoChanged()
    End Sub
    Partial Private Sub Onfac_descueChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_descueChanged()
    End Sub
    Partial Private Sub Onfac_neto1Changing(value As Decimal)
    End Sub
    Partial Private Sub Onfac_neto1Changed()
    End Sub
    Partial Private Sub Onfac_neto2Changing(value As Decimal)
    End Sub
    Partial Private Sub Onfac_neto2Changed()
    End Sub
    Partial Private Sub Onfac_iva1Changing(value As Decimal)
    End Sub
    Partial Private Sub Onfac_iva1Changed()
    End Sub
    Partial Private Sub Onfac_iva2Changing(value As Decimal)
    End Sub
    Partial Private Sub Onfac_iva2Changed()
    End Sub
    Partial Private Sub Onfac_poriv1Changing(value As Decimal)
    End Sub
    Partial Private Sub Onfac_poriv1Changed()
    End Sub
    Partial Private Sub Onfac_poriv2Changing(value As Decimal)
    End Sub
    Partial Private Sub Onfac_poriv2Changed()
    End Sub
    Partial Private Sub Onfac_perivaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_perivaChanged()
    End Sub
    Partial Private Sub Onfac_peribChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_peribChanged()
    End Sub
    Partial Private Sub Onfac_totalChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_totalChanged()
    End Sub
    Partial Private Sub Onfac_anuladChanging(value As Boolean)
    End Sub
    Partial Private Sub Onfac_anuladChanged()
    End Sub
    Partial Private Sub Oncli_nombreChanging(value As String)
    End Sub
    Partial Private Sub Oncli_nombreChanged()
    End Sub
    Partial Private Sub Oncli_cuitChanging(value As String)
    End Sub
    Partial Private Sub Oncli_cuitChanged()
    End Sub
    Partial Private Sub Oniva_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Oniva_codigoChanged()
    End Sub
    Partial Private Sub Onpro_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onpro_codigoChanged()
    End Sub
    Partial Private Sub Oncli_localiChanging(value As String)
    End Sub
    Partial Private Sub Oncli_localiChanged()
    End Sub
    Partial Private Sub Oncli_codposChanging(value As String)
    End Sub
    Partial Private Sub Oncli_codposChanged()
    End Sub
    Partial Private Sub Oncli_domiciChanging(value As String)
    End Sub
    Partial Private Sub Oncli_domiciChanged()
    End Sub
    Partial Private Sub Onfac_caiChanging(value As String)
    End Sub
    Partial Private Sub Onfac_caiChanged()
    End Sub
    Partial Private Sub Onfac_caivenChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfac_caivenChanged()
    End Sub
    Partial Private Sub Onfac_hojasChanging(value As Integer)
    End Sub
    Partial Private Sub Onfac_hojasChanged()
    End Sub
    Partial Private Sub Onasi_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onasi_codigoChanged()
    End Sub
    Partial Private Sub Onfac_forpagChanging(value As Integer)
    End Sub
    Partial Private Sub Onfac_forpagChanged()
    End Sub
    Partial Private Sub Onfac_cuoimpChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_cuoimpChanged()
    End Sub
    Partial Private Sub Onfac_cuocanChanging(value As Byte)
    End Sub
    Partial Private Sub Onfac_cuocanChanged()
    End Sub
    Partial Private Sub Onfac_dolarChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_dolarChanged()
    End Sub
    Partial Private Sub Onfac_monedaChanging(value As Char)
    End Sub
    Partial Private Sub Onfac_monedaChanged()
    End Sub
    Partial Private Sub Onusu_fecaccChanging(value As Date)
    End Sub
    Partial Private Sub Onusu_fecaccChanged()
    End Sub
    Partial Private Sub Onusu_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onusu_codigoChanged()
    End Sub
    Partial Private Sub Onpco_codigoChanging(value As Short)
    End Sub
    Partial Private Sub Onpco_codigoChanged()
    End Sub
    Partial Private Sub Onfac_impintChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_impintChanged()
    End Sub
    Partial Private Sub Ondep_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Ondep_codigoChanged()
    End Sub
    Partial Private Sub Onfac_fleteChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_fleteChanged()
    End Sub
    Partial Private Sub Onfac_recargoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfac_recargoChanged()
    End Sub
    Partial Private Sub Onfac_descue1Changing(value As Decimal)
    End Sub
    Partial Private Sub Onfac_descue1Changed()
    End Sub
    Partial Private Sub Onfac_descue2Changing(value As Decimal)
    End Sub
    Partial Private Sub Onfac_descue2Changed()
    End Sub
    Partial Private Sub Onfac_fecvenChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfac_fecvenChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Storage:="_fac_codigo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property fac_codigo() As Integer
			Get
				Return Me._fac_codigo
			End Get
			Set
				If ((Me._fac_codigo = value)  _
							= false) Then
					Me.Onfac_codigoChanging(value)
					Me.SendPropertyChanging
					Me._fac_codigo = value
					Me.SendPropertyChanged("fac_codigo")
					Me.Onfac_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_tipcom", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
		Public Property fac_tipcom() As String
			Get
				Return Me._fac_tipcom
			End Get
			Set
				If (String.Equals(Me._fac_tipcom, value) = false) Then
					Me.Onfac_tipcomChanging(value)
					Me.SendPropertyChanging
					Me._fac_tipcom = value
					Me.SendPropertyChanged("fac_tipcom")
					Me.Onfac_tipcomChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_tipmov", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
		Public Property fac_tipmov() As String
			Get
				Return Me._fac_tipmov
			End Get
			Set
				If (String.Equals(Me._fac_tipmov, value) = false) Then
					Me.Onfac_tipmovChanging(value)
					Me.SendPropertyChanging
					Me._fac_tipmov = value
					Me.SendPropertyChanged("fac_tipmov")
					Me.Onfac_tipmovChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_fecha", DbType:="DateTime NOT NULL")>  _
		Public Property fac_fecha() As Date
			Get
				Return Me._fac_fecha
			End Get
			Set
				If ((Me._fac_fecha = value)  _
							= false) Then
					Me.Onfac_fechaChanging(value)
					Me.SendPropertyChanging
					Me._fac_fecha = value
					Me.SendPropertyChanged("fac_fecha")
					Me.Onfac_fechaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_tipo", DbType:="Char(1) NOT NULL")>  _
		Public Property fac_tipo() As Char
			Get
				Return Me._fac_tipo
			End Get
			Set
				If ((Me._fac_tipo = value)  _
							= false) Then
					Me.Onfac_tipoChanging(value)
					Me.SendPropertyChanging
					Me._fac_tipo = value
					Me.SendPropertyChanged("fac_tipo")
					Me.Onfac_tipoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_ptovta", DbType:="Int NOT NULL")>  _
		Public Property fac_ptovta() As Integer
			Get
				Return Me._fac_ptovta
			End Get
			Set
				If ((Me._fac_ptovta = value)  _
							= false) Then
					Me.Onfac_ptovtaChanging(value)
					Me.SendPropertyChanging
					Me._fac_ptovta = value
					Me.SendPropertyChanged("fac_ptovta")
					Me.Onfac_ptovtaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_numero", DbType:="Int NOT NULL")>  _
		Public Property fac_numero() As Integer
			Get
				Return Me._fac_numero
			End Get
			Set
				If ((Me._fac_numero = value)  _
							= false) Then
					Me.Onfac_numeroChanging(value)
					Me.SendPropertyChanging
					Me._fac_numero = value
					Me.SendPropertyChanged("fac_numero")
					Me.Onfac_numeroChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_cli_codigo", DbType:="Int NOT NULL")>  _
		Public Property cli_codigo() As Integer
			Get
				Return Me._cli_codigo
			End Get
			Set
				If ((Me._cli_codigo = value)  _
							= false) Then
					Me.Oncli_codigoChanging(value)
					Me.SendPropertyChanging
					Me._cli_codigo = value
					Me.SendPropertyChanged("cli_codigo")
					Me.Oncli_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_descue", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_descue() As Decimal
			Get
				Return Me._fac_descue
			End Get
			Set
				If ((Me._fac_descue = value)  _
							= false) Then
					Me.Onfac_descueChanging(value)
					Me.SendPropertyChanging
					Me._fac_descue = value
					Me.SendPropertyChanged("fac_descue")
					Me.Onfac_descueChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_neto1", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_neto1() As Decimal
			Get
				Return Me._fac_neto1
			End Get
			Set
				If ((Me._fac_neto1 = value)  _
							= false) Then
					Me.Onfac_neto1Changing(value)
					Me.SendPropertyChanging
					Me._fac_neto1 = value
					Me.SendPropertyChanged("fac_neto1")
					Me.Onfac_neto1Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_neto2", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_neto2() As Decimal
			Get
				Return Me._fac_neto2
			End Get
			Set
				If ((Me._fac_neto2 = value)  _
							= false) Then
					Me.Onfac_neto2Changing(value)
					Me.SendPropertyChanging
					Me._fac_neto2 = value
					Me.SendPropertyChanged("fac_neto2")
					Me.Onfac_neto2Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_iva1", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_iva1() As Decimal
			Get
				Return Me._fac_iva1
			End Get
			Set
				If ((Me._fac_iva1 = value)  _
							= false) Then
					Me.Onfac_iva1Changing(value)
					Me.SendPropertyChanging
					Me._fac_iva1 = value
					Me.SendPropertyChanged("fac_iva1")
					Me.Onfac_iva1Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_iva2", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_iva2() As Decimal
			Get
				Return Me._fac_iva2
			End Get
			Set
				If ((Me._fac_iva2 = value)  _
							= false) Then
					Me.Onfac_iva2Changing(value)
					Me.SendPropertyChanging
					Me._fac_iva2 = value
					Me.SendPropertyChanged("fac_iva2")
					Me.Onfac_iva2Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_poriv1", DbType:="Decimal(5,2) NOT NULL")>  _
		Public Property fac_poriv1() As Decimal
			Get
				Return Me._fac_poriv1
			End Get
			Set
				If ((Me._fac_poriv1 = value)  _
							= false) Then
					Me.Onfac_poriv1Changing(value)
					Me.SendPropertyChanging
					Me._fac_poriv1 = value
					Me.SendPropertyChanged("fac_poriv1")
					Me.Onfac_poriv1Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_poriv2", DbType:="Decimal(5,2) NOT NULL")>  _
		Public Property fac_poriv2() As Decimal
			Get
				Return Me._fac_poriv2
			End Get
			Set
				If ((Me._fac_poriv2 = value)  _
							= false) Then
					Me.Onfac_poriv2Changing(value)
					Me.SendPropertyChanging
					Me._fac_poriv2 = value
					Me.SendPropertyChanged("fac_poriv2")
					Me.Onfac_poriv2Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_periva", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_periva() As Decimal
			Get
				Return Me._fac_periva
			End Get
			Set
				If ((Me._fac_periva = value)  _
							= false) Then
					Me.Onfac_perivaChanging(value)
					Me.SendPropertyChanging
					Me._fac_periva = value
					Me.SendPropertyChanged("fac_periva")
					Me.Onfac_perivaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_perib", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_perib() As Decimal
			Get
				Return Me._fac_perib
			End Get
			Set
				If ((Me._fac_perib = value)  _
							= false) Then
					Me.Onfac_peribChanging(value)
					Me.SendPropertyChanging
					Me._fac_perib = value
					Me.SendPropertyChanged("fac_perib")
					Me.Onfac_peribChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_total", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_total() As Decimal
			Get
				Return Me._fac_total
			End Get
			Set
				If ((Me._fac_total = value)  _
							= false) Then
					Me.Onfac_totalChanging(value)
					Me.SendPropertyChanging
					Me._fac_total = value
					Me.SendPropertyChanged("fac_total")
					Me.Onfac_totalChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_anulad", DbType:="Bit NOT NULL")>  _
		Public Property fac_anulad() As Boolean
			Get
				Return Me._fac_anulad
			End Get
			Set
				If ((Me._fac_anulad = value)  _
							= false) Then
					Me.Onfac_anuladChanging(value)
					Me.SendPropertyChanging
					Me._fac_anulad = value
					Me.SendPropertyChanged("fac_anulad")
					Me.Onfac_anuladChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_cli_nombre", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
		Public Property cli_nombre() As String
			Get
				Return Me._cli_nombre
			End Get
			Set
				If (String.Equals(Me._cli_nombre, value) = false) Then
					Me.Oncli_nombreChanging(value)
					Me.SendPropertyChanging
					Me._cli_nombre = value
					Me.SendPropertyChanged("cli_nombre")
					Me.Oncli_nombreChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_cli_cuit", DbType:="Char(13) NOT NULL", CanBeNull:=false)>  _
		Public Property cli_cuit() As String
			Get
				Return Me._cli_cuit
			End Get
			Set
				If (String.Equals(Me._cli_cuit, value) = false) Then
					Me.Oncli_cuitChanging(value)
					Me.SendPropertyChanging
					Me._cli_cuit = value
					Me.SendPropertyChanged("cli_cuit")
					Me.Oncli_cuitChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_iva_codigo", DbType:="Int NOT NULL")>  _
		Public Property iva_codigo() As Integer
			Get
				Return Me._iva_codigo
			End Get
			Set
				If ((Me._iva_codigo = value)  _
							= false) Then
					Me.Oniva_codigoChanging(value)
					Me.SendPropertyChanging
					Me._iva_codigo = value
					Me.SendPropertyChanged("iva_codigo")
					Me.Oniva_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_pro_codigo", DbType:="Int NOT NULL")>  _
		Public Property pro_codigo() As Integer
			Get
				Return Me._pro_codigo
			End Get
			Set
				If ((Me._pro_codigo = value)  _
							= false) Then
					Me.Onpro_codigoChanging(value)
					Me.SendPropertyChanging
					Me._pro_codigo = value
					Me.SendPropertyChanged("pro_codigo")
					Me.Onpro_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_cli_locali", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
		Public Property cli_locali() As String
			Get
				Return Me._cli_locali
			End Get
			Set
				If (String.Equals(Me._cli_locali, value) = false) Then
					Me.Oncli_localiChanging(value)
					Me.SendPropertyChanging
					Me._cli_locali = value
					Me.SendPropertyChanged("cli_locali")
					Me.Oncli_localiChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_cli_codpos", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
		Public Property cli_codpos() As String
			Get
				Return Me._cli_codpos
			End Get
			Set
				If (String.Equals(Me._cli_codpos, value) = false) Then
					Me.Oncli_codposChanging(value)
					Me.SendPropertyChanging
					Me._cli_codpos = value
					Me.SendPropertyChanged("cli_codpos")
					Me.Oncli_codposChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_cli_domici", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
		Public Property cli_domici() As String
			Get
				Return Me._cli_domici
			End Get
			Set
				If (String.Equals(Me._cli_domici, value) = false) Then
					Me.Oncli_domiciChanging(value)
					Me.SendPropertyChanging
					Me._cli_domici = value
					Me.SendPropertyChanged("cli_domici")
					Me.Oncli_domiciChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_cai", DbType:="Char(14) NOT NULL", CanBeNull:=false)>  _
		Public Property fac_cai() As String
			Get
				Return Me._fac_cai
			End Get
			Set
				If (String.Equals(Me._fac_cai, value) = false) Then
					Me.Onfac_caiChanging(value)
					Me.SendPropertyChanging
					Me._fac_cai = value
					Me.SendPropertyChanged("fac_cai")
					Me.Onfac_caiChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_caiven", DbType:="DateTime")>  _
		Public Property fac_caiven() As System.Nullable(Of Date)
			Get
				Return Me._fac_caiven
			End Get
			Set
				If (Me._fac_caiven.Equals(value) = false) Then
					Me.Onfac_caivenChanging(value)
					Me.SendPropertyChanging
					Me._fac_caiven = value
					Me.SendPropertyChanged("fac_caiven")
					Me.Onfac_caivenChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_hojas", DbType:="Int NOT NULL")>  _
		Public Property fac_hojas() As Integer
			Get
				Return Me._fac_hojas
			End Get
			Set
				If ((Me._fac_hojas = value)  _
							= false) Then
					Me.Onfac_hojasChanging(value)
					Me.SendPropertyChanging
					Me._fac_hojas = value
					Me.SendPropertyChanged("fac_hojas")
					Me.Onfac_hojasChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_asi_codigo", DbType:="Int NOT NULL")>  _
		Public Property asi_codigo() As Integer
			Get
				Return Me._asi_codigo
			End Get
			Set
				If ((Me._asi_codigo = value)  _
							= false) Then
					Me.Onasi_codigoChanging(value)
					Me.SendPropertyChanging
					Me._asi_codigo = value
					Me.SendPropertyChanged("asi_codigo")
					Me.Onasi_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_forpag", DbType:="Int NOT NULL")>  _
		Public Property fac_forpag() As Integer
			Get
				Return Me._fac_forpag
			End Get
			Set
				If ((Me._fac_forpag = value)  _
							= false) Then
					Me.Onfac_forpagChanging(value)
					Me.SendPropertyChanging
					Me._fac_forpag = value
					Me.SendPropertyChanged("fac_forpag")
					Me.Onfac_forpagChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_cuoimp", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_cuoimp() As Decimal
			Get
				Return Me._fac_cuoimp
			End Get
			Set
				If ((Me._fac_cuoimp = value)  _
							= false) Then
					Me.Onfac_cuoimpChanging(value)
					Me.SendPropertyChanging
					Me._fac_cuoimp = value
					Me.SendPropertyChanged("fac_cuoimp")
					Me.Onfac_cuoimpChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_cuocan", DbType:="TinyInt NOT NULL")>  _
		Public Property fac_cuocan() As Byte
			Get
				Return Me._fac_cuocan
			End Get
			Set
				If ((Me._fac_cuocan = value)  _
							= false) Then
					Me.Onfac_cuocanChanging(value)
					Me.SendPropertyChanging
					Me._fac_cuocan = value
					Me.SendPropertyChanged("fac_cuocan")
					Me.Onfac_cuocanChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_dolar", DbType:="Decimal(8,3) NOT NULL")>  _
		Public Property fac_dolar() As Decimal
			Get
				Return Me._fac_dolar
			End Get
			Set
				If ((Me._fac_dolar = value)  _
							= false) Then
					Me.Onfac_dolarChanging(value)
					Me.SendPropertyChanging
					Me._fac_dolar = value
					Me.SendPropertyChanged("fac_dolar")
					Me.Onfac_dolarChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_moneda", DbType:="Char(1) NOT NULL")>  _
		Public Property fac_moneda() As Char
			Get
				Return Me._fac_moneda
			End Get
			Set
				If ((Me._fac_moneda = value)  _
							= false) Then
					Me.Onfac_monedaChanging(value)
					Me.SendPropertyChanging
					Me._fac_moneda = value
					Me.SendPropertyChanged("fac_moneda")
					Me.Onfac_monedaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_fecacc", DbType:="DateTime NOT NULL")>  _
		Public Property usu_fecacc() As Date
			Get
				Return Me._usu_fecacc
			End Get
			Set
				If ((Me._usu_fecacc = value)  _
							= false) Then
					Me.Onusu_fecaccChanging(value)
					Me.SendPropertyChanging
					Me._usu_fecacc = value
					Me.SendPropertyChanged("usu_fecacc")
					Me.Onusu_fecaccChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_codigo", DbType:="Int NOT NULL")>  _
		Public Property usu_codigo() As Integer
			Get
				Return Me._usu_codigo
			End Get
			Set
				If ((Me._usu_codigo = value)  _
							= false) Then
					Me.Onusu_codigoChanging(value)
					Me.SendPropertyChanging
					Me._usu_codigo = value
					Me.SendPropertyChanged("usu_codigo")
					Me.Onusu_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_pco_codigo", DbType:="SmallInt NOT NULL")>  _
		Public Property pco_codigo() As Short
			Get
				Return Me._pco_codigo
			End Get
			Set
				If ((Me._pco_codigo = value)  _
							= false) Then
					Me.Onpco_codigoChanging(value)
					Me.SendPropertyChanging
					Me._pco_codigo = value
					Me.SendPropertyChanged("pco_codigo")
					Me.Onpco_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_impint", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property fac_impint() As Decimal
			Get
				Return Me._fac_impint
			End Get
			Set
				If ((Me._fac_impint = value)  _
							= false) Then
					Me.Onfac_impintChanging(value)
					Me.SendPropertyChanging
					Me._fac_impint = value
					Me.SendPropertyChanged("fac_impint")
					Me.Onfac_impintChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dep_codigo", DbType:="Int NOT NULL")>  _
		Public Property dep_codigo() As Integer
			Get
				Return Me._dep_codigo
			End Get
			Set
				If ((Me._dep_codigo = value)  _
							= false) Then
					Me.Ondep_codigoChanging(value)
					Me.SendPropertyChanging
					Me._dep_codigo = value
					Me.SendPropertyChanged("dep_codigo")
					Me.Ondep_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_flete", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_flete() As Decimal
			Get
				Return Me._fac_flete
			End Get
			Set
				If ((Me._fac_flete = value)  _
							= false) Then
					Me.Onfac_fleteChanging(value)
					Me.SendPropertyChanging
					Me._fac_flete = value
					Me.SendPropertyChanged("fac_flete")
					Me.Onfac_fleteChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_recargo", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_recargo() As Decimal
			Get
				Return Me._fac_recargo
			End Get
			Set
				If ((Me._fac_recargo = value)  _
							= false) Then
					Me.Onfac_recargoChanging(value)
					Me.SendPropertyChanging
					Me._fac_recargo = value
					Me.SendPropertyChanged("fac_recargo")
					Me.Onfac_recargoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_descue1", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_descue1() As Decimal
			Get
				Return Me._fac_descue1
			End Get
			Set
				If ((Me._fac_descue1 = value)  _
							= false) Then
					Me.Onfac_descue1Changing(value)
					Me.SendPropertyChanging
					Me._fac_descue1 = value
					Me.SendPropertyChanged("fac_descue1")
					Me.Onfac_descue1Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_descue2", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property fac_descue2() As Decimal
			Get
				Return Me._fac_descue2
			End Get
			Set
				If ((Me._fac_descue2 = value)  _
							= false) Then
					Me.Onfac_descue2Changing(value)
					Me.SendPropertyChanging
					Me._fac_descue2 = value
					Me.SendPropertyChanged("fac_descue2")
					Me.Onfac_descue2Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_fecven", DbType:="SmallDateTime")>  _
		Public Property fac_fecven() As System.Nullable(Of Date)
			Get
				Return Me._fac_fecven
			End Get
			Set
				If (Me._fac_fecven.Equals(value) = false) Then
					Me.Onfac_fecvenChanging(value)
					Me.SendPropertyChanging
					Me._fac_fecven = value
					Me.SendPropertyChanged("fac_fecven")
					Me.Onfac_fecvenChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.param")>  _
	Partial Public Class param
		
		Private _par_codigo As Decimal
		
		Private _par_empres As String
		
		Private _par_cuit As String
		
		Private _par_coniva As Integer
		
		Private _par_nroib As String
		
		Private _pla_ivavta As Integer
		
		Private _pla_valdep As Integer
		
		Private _pla_caja As Integer
		
		Private _pla_tarcre As Integer
		
		Private _pla_ctacte As Integer
		
		Private _pla_credit As Integer
		
		Private _pla_periva As Integer
		
		Private _pla_perib As Integer
		
		Private _pla_ctaprv As Integer
		
		Private _fac_lis_a As String
		
		Private _fac_lis_b As String
		
		Private _fac_lis_c As String
		
		Private _fac_lis_e As String
		
		Private _par_membrete1 As String
		
		Private _par_membrete2 As String
		
		Private _PAR_SMTP_SERVER As String
		
		Private _PAR_SMTP_USUARIO As String
		
		Private _PAR_SMTP_CLAVE As String
		
		Private _PAR_SMTP_MAIL As String
		
		Private _PAR_SMTP_CUENTA As String
		
		Private _par_retib As Decimal
		
		Private _par_retib_altoriesgo As Decimal
		
		Private _par_retib_minimo As Decimal
		
		Private _par_retener_ib As Boolean
		
		Private _par_retener_ganancias As Boolean
		
		Private _par_retener_iva As Boolean
		
		Private _par_retener_ap As Boolean
		
		Private _par_ta_path As String
		
		Private _par_wsdl As String
		
		Private _par_smtp_port As System.Nullable(Of Integer)
		
		Private _par_smtp_ssl As System.Nullable(Of Boolean)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Storage:="_par_codigo", DbType:="Decimal(1,0) NOT NULL")>  _
		Public Property par_codigo() As Decimal
			Get
				Return Me._par_codigo
			End Get
			Set
				If ((Me._par_codigo = value)  _
							= false) Then
					Me._par_codigo = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_empres", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
		Public Property par_empres() As String
			Get
				Return Me._par_empres
			End Get
			Set
				If (String.Equals(Me._par_empres, value) = false) Then
					Me._par_empres = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_cuit", DbType:="Char(13) NOT NULL", CanBeNull:=false)>  _
		Public Property par_cuit() As String
			Get
				Return Me._par_cuit
			End Get
			Set
				If (String.Equals(Me._par_cuit, value) = false) Then
					Me._par_cuit = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_coniva", DbType:="Int NOT NULL")>  _
		Public Property par_coniva() As Integer
			Get
				Return Me._par_coniva
			End Get
			Set
				If ((Me._par_coniva = value)  _
							= false) Then
					Me._par_coniva = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_nroib", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
		Public Property par_nroib() As String
			Get
				Return Me._par_nroib
			End Get
			Set
				If (String.Equals(Me._par_nroib, value) = false) Then
					Me._par_nroib = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_ivavta", DbType:="Int NOT NULL")>  _
		Public Property pla_ivavta() As Integer
			Get
				Return Me._pla_ivavta
			End Get
			Set
				If ((Me._pla_ivavta = value)  _
							= false) Then
					Me._pla_ivavta = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_valdep", DbType:="Int NOT NULL")>  _
		Public Property pla_valdep() As Integer
			Get
				Return Me._pla_valdep
			End Get
			Set
				If ((Me._pla_valdep = value)  _
							= false) Then
					Me._pla_valdep = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_caja", DbType:="Int NOT NULL")>  _
		Public Property pla_caja() As Integer
			Get
				Return Me._pla_caja
			End Get
			Set
				If ((Me._pla_caja = value)  _
							= false) Then
					Me._pla_caja = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_tarcre", DbType:="Int NOT NULL")>  _
		Public Property pla_tarcre() As Integer
			Get
				Return Me._pla_tarcre
			End Get
			Set
				If ((Me._pla_tarcre = value)  _
							= false) Then
					Me._pla_tarcre = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_ctacte", DbType:="Int NOT NULL")>  _
		Public Property pla_ctacte() As Integer
			Get
				Return Me._pla_ctacte
			End Get
			Set
				If ((Me._pla_ctacte = value)  _
							= false) Then
					Me._pla_ctacte = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_credit", DbType:="Int NOT NULL")>  _
		Public Property pla_credit() As Integer
			Get
				Return Me._pla_credit
			End Get
			Set
				If ((Me._pla_credit = value)  _
							= false) Then
					Me._pla_credit = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_periva", DbType:="Int NOT NULL")>  _
		Public Property pla_periva() As Integer
			Get
				Return Me._pla_periva
			End Get
			Set
				If ((Me._pla_periva = value)  _
							= false) Then
					Me._pla_periva = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_perib", DbType:="Int NOT NULL")>  _
		Public Property pla_perib() As Integer
			Get
				Return Me._pla_perib
			End Get
			Set
				If ((Me._pla_perib = value)  _
							= false) Then
					Me._pla_perib = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_ctaprv", DbType:="Int NOT NULL")>  _
		Public Property pla_ctaprv() As Integer
			Get
				Return Me._pla_ctaprv
			End Get
			Set
				If ((Me._pla_ctaprv = value)  _
							= false) Then
					Me._pla_ctaprv = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_lis_a", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
		Public Property fac_lis_a() As String
			Get
				Return Me._fac_lis_a
			End Get
			Set
				If (String.Equals(Me._fac_lis_a, value) = false) Then
					Me._fac_lis_a = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_lis_b", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
		Public Property fac_lis_b() As String
			Get
				Return Me._fac_lis_b
			End Get
			Set
				If (String.Equals(Me._fac_lis_b, value) = false) Then
					Me._fac_lis_b = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_lis_c", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
		Public Property fac_lis_c() As String
			Get
				Return Me._fac_lis_c
			End Get
			Set
				If (String.Equals(Me._fac_lis_c, value) = false) Then
					Me._fac_lis_c = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_fac_lis_e", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
		Public Property fac_lis_e() As String
			Get
				Return Me._fac_lis_e
			End Get
			Set
				If (String.Equals(Me._fac_lis_e, value) = false) Then
					Me._fac_lis_e = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_membrete1", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property par_membrete1() As String
			Get
				Return Me._par_membrete1
			End Get
			Set
				If (String.Equals(Me._par_membrete1, value) = false) Then
					Me._par_membrete1 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_membrete2", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property par_membrete2() As String
			Get
				Return Me._par_membrete2
			End Get
			Set
				If (String.Equals(Me._par_membrete2, value) = false) Then
					Me._par_membrete2 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_PAR_SMTP_SERVER", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property PAR_SMTP_SERVER() As String
			Get
				Return Me._PAR_SMTP_SERVER
			End Get
			Set
				If (String.Equals(Me._PAR_SMTP_SERVER, value) = false) Then
					Me._PAR_SMTP_SERVER = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_PAR_SMTP_USUARIO", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property PAR_SMTP_USUARIO() As String
			Get
				Return Me._PAR_SMTP_USUARIO
			End Get
			Set
				If (String.Equals(Me._PAR_SMTP_USUARIO, value) = false) Then
					Me._PAR_SMTP_USUARIO = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_PAR_SMTP_CLAVE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property PAR_SMTP_CLAVE() As String
			Get
				Return Me._PAR_SMTP_CLAVE
			End Get
			Set
				If (String.Equals(Me._PAR_SMTP_CLAVE, value) = false) Then
					Me._PAR_SMTP_CLAVE = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_PAR_SMTP_MAIL", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property PAR_SMTP_MAIL() As String
			Get
				Return Me._PAR_SMTP_MAIL
			End Get
			Set
				If (String.Equals(Me._PAR_SMTP_MAIL, value) = false) Then
					Me._PAR_SMTP_MAIL = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_PAR_SMTP_CUENTA", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property PAR_SMTP_CUENTA() As String
			Get
				Return Me._PAR_SMTP_CUENTA
			End Get
			Set
				If (String.Equals(Me._PAR_SMTP_CUENTA, value) = false) Then
					Me._PAR_SMTP_CUENTA = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_retib", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property par_retib() As Decimal
			Get
				Return Me._par_retib
			End Get
			Set
				If ((Me._par_retib = value)  _
							= false) Then
					Me._par_retib = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_retib_altoriesgo", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property par_retib_altoriesgo() As Decimal
			Get
				Return Me._par_retib_altoriesgo
			End Get
			Set
				If ((Me._par_retib_altoriesgo = value)  _
							= false) Then
					Me._par_retib_altoriesgo = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_retib_minimo", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property par_retib_minimo() As Decimal
			Get
				Return Me._par_retib_minimo
			End Get
			Set
				If ((Me._par_retib_minimo = value)  _
							= false) Then
					Me._par_retib_minimo = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_retener_ib", DbType:="Bit NOT NULL")>  _
		Public Property par_retener_ib() As Boolean
			Get
				Return Me._par_retener_ib
			End Get
			Set
				If ((Me._par_retener_ib = value)  _
							= false) Then
					Me._par_retener_ib = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_retener_ganancias", DbType:="Bit NOT NULL")>  _
		Public Property par_retener_ganancias() As Boolean
			Get
				Return Me._par_retener_ganancias
			End Get
			Set
				If ((Me._par_retener_ganancias = value)  _
							= false) Then
					Me._par_retener_ganancias = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_retener_iva", DbType:="Bit NOT NULL")>  _
		Public Property par_retener_iva() As Boolean
			Get
				Return Me._par_retener_iva
			End Get
			Set
				If ((Me._par_retener_iva = value)  _
							= false) Then
					Me._par_retener_iva = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_retener_ap", DbType:="Bit NOT NULL")>  _
		Public Property par_retener_ap() As Boolean
			Get
				Return Me._par_retener_ap
			End Get
			Set
				If ((Me._par_retener_ap = value)  _
							= false) Then
					Me._par_retener_ap = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_ta_path", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property par_ta_path() As String
			Get
				Return Me._par_ta_path
			End Get
			Set
				If (String.Equals(Me._par_ta_path, value) = false) Then
					Me._par_ta_path = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_wsdl", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property par_wsdl() As String
			Get
				Return Me._par_wsdl
			End Get
			Set
				If (String.Equals(Me._par_wsdl, value) = false) Then
					Me._par_wsdl = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_smtp_port", DbType:="Int")>  _
		Public Property par_smtp_port() As System.Nullable(Of Integer)
			Get
				Return Me._par_smtp_port
			End Get
			Set
				If (Me._par_smtp_port.Equals(value) = false) Then
					Me._par_smtp_port = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_par_smtp_ssl", DbType:="Bit")>  _
		Public Property par_smtp_ssl() As System.Nullable(Of Boolean)
			Get
				Return Me._par_smtp_ssl
			End Get
			Set
				If (Me._par_smtp_ssl.Equals(value) = false) Then
					Me._par_smtp_ssl = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.depositos")>  _
	Partial Public Class deposito
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _dep_codigo As Integer
		
		Private _dep_descri As String
		
		Private _dep_activo As Boolean
		
		Private _dep_factur As Boolean
		
		Private _stocks As EntitySet(Of stock)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ondep_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Ondep_codigoChanged()
    End Sub
    Partial Private Sub Ondep_descriChanging(value As String)
    End Sub
    Partial Private Sub Ondep_descriChanged()
    End Sub
    Partial Private Sub Ondep_activoChanging(value As Boolean)
    End Sub
    Partial Private Sub Ondep_activoChanged()
    End Sub
    Partial Private Sub Ondep_facturChanging(value As Boolean)
    End Sub
    Partial Private Sub Ondep_facturChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._stocks = New EntitySet(Of stock)(AddressOf Me.attach_stocks, AddressOf Me.detach_stocks)
			OnCreated
		End Sub
		
		<Column(Storage:="_dep_codigo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property dep_codigo() As Integer
			Get
				Return Me._dep_codigo
			End Get
			Set
				If ((Me._dep_codigo = value)  _
							= false) Then
					Me.Ondep_codigoChanging(value)
					Me.SendPropertyChanging
					Me._dep_codigo = value
					Me.SendPropertyChanged("dep_codigo")
					Me.Ondep_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dep_descri", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
		Public Property dep_descri() As String
			Get
				Return Me._dep_descri
			End Get
			Set
				If (String.Equals(Me._dep_descri, value) = false) Then
					Me.Ondep_descriChanging(value)
					Me.SendPropertyChanging
					Me._dep_descri = value
					Me.SendPropertyChanged("dep_descri")
					Me.Ondep_descriChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dep_activo", DbType:="Bit NOT NULL")>  _
		Public Property dep_activo() As Boolean
			Get
				Return Me._dep_activo
			End Get
			Set
				If ((Me._dep_activo = value)  _
							= false) Then
					Me.Ondep_activoChanging(value)
					Me.SendPropertyChanging
					Me._dep_activo = value
					Me.SendPropertyChanged("dep_activo")
					Me.Ondep_activoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dep_factur", DbType:="Bit NOT NULL")>  _
		Public Property dep_factur() As Boolean
			Get
				Return Me._dep_factur
			End Get
			Set
				If ((Me._dep_factur = value)  _
							= false) Then
					Me.Ondep_facturChanging(value)
					Me.SendPropertyChanging
					Me._dep_factur = value
					Me.SendPropertyChanged("dep_factur")
					Me.Ondep_facturChanged
				End If
			End Set
		End Property
		
		<Association(Name:="deposito_stock", Storage:="_stocks", ThisKey:="dep_codigo", OtherKey:="dep_codigo")>  _
		Public Property stocks() As EntitySet(Of stock)
			Get
				Return Me._stocks
			End Get
			Set
				Me._stocks.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_stocks(ByVal entity As stock)
			Me.SendPropertyChanging
			entity.deposito = Me
		End Sub
		
		Private Sub detach_stocks(ByVal entity As stock)
			Me.SendPropertyChanging
			entity.deposito = Nothing
		End Sub
	End Class
	
	<Table(Name:="dbo.stock")>  _
	Partial Public Class stock
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _art_codigo As Integer
		
		Private _dep_codigo As Integer
		
		Private _art_stock As Integer
		
		Private _art_tomado As Integer
		
		Private _usu_fecacc As Date
		
		Private _usu_codigo As Integer
		
		Private _deposito As EntityRef(Of deposito)
		
		Private _articulo As EntityRef(Of articulo)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onart_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onart_codigoChanged()
    End Sub
    Partial Private Sub Ondep_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Ondep_codigoChanged()
    End Sub
    Partial Private Sub Onart_stockChanging(value As Integer)
    End Sub
    Partial Private Sub Onart_stockChanged()
    End Sub
    Partial Private Sub Onart_tomadoChanging(value As Integer)
    End Sub
    Partial Private Sub Onart_tomadoChanged()
    End Sub
    Partial Private Sub Onusu_fecaccChanging(value As Date)
    End Sub
    Partial Private Sub Onusu_fecaccChanged()
    End Sub
    Partial Private Sub Onusu_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onusu_codigoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._deposito = CType(Nothing, EntityRef(Of deposito))
			Me._articulo = CType(Nothing, EntityRef(Of articulo))
			OnCreated
		End Sub
		
		<Column(Storage:="_art_codigo", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property art_codigo() As Integer
			Get
				Return Me._art_codigo
			End Get
			Set
				If ((Me._art_codigo = value)  _
							= false) Then
					If Me._articulo.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
					End If
					Me.Onart_codigoChanging(value)
					Me.SendPropertyChanging
					Me._art_codigo = value
					Me.SendPropertyChanged("art_codigo")
					Me.Onart_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dep_codigo", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property dep_codigo() As Integer
			Get
				Return Me._dep_codigo
			End Get
			Set
				If ((Me._dep_codigo = value)  _
							= false) Then
					If Me._deposito.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
					End If
					Me.Ondep_codigoChanging(value)
					Me.SendPropertyChanging
					Me._dep_codigo = value
					Me.SendPropertyChanged("dep_codigo")
					Me.Ondep_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_stock", DbType:="Int NOT NULL")>  _
		Public Property art_stock() As Integer
			Get
				Return Me._art_stock
			End Get
			Set
				If ((Me._art_stock = value)  _
							= false) Then
					Me.Onart_stockChanging(value)
					Me.SendPropertyChanging
					Me._art_stock = value
					Me.SendPropertyChanged("art_stock")
					Me.Onart_stockChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_tomado", DbType:="Int NOT NULL")>  _
		Public Property art_tomado() As Integer
			Get
				Return Me._art_tomado
			End Get
			Set
				If ((Me._art_tomado = value)  _
							= false) Then
					Me.Onart_tomadoChanging(value)
					Me.SendPropertyChanging
					Me._art_tomado = value
					Me.SendPropertyChanged("art_tomado")
					Me.Onart_tomadoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_fecacc", DbType:="DateTime NOT NULL")>  _
		Public Property usu_fecacc() As Date
			Get
				Return Me._usu_fecacc
			End Get
			Set
				If ((Me._usu_fecacc = value)  _
							= false) Then
					Me.Onusu_fecaccChanging(value)
					Me.SendPropertyChanging
					Me._usu_fecacc = value
					Me.SendPropertyChanged("usu_fecacc")
					Me.Onusu_fecaccChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_codigo", DbType:="Int NOT NULL")>  _
		Public Property usu_codigo() As Integer
			Get
				Return Me._usu_codigo
			End Get
			Set
				If ((Me._usu_codigo = value)  _
							= false) Then
					Me.Onusu_codigoChanging(value)
					Me.SendPropertyChanging
					Me._usu_codigo = value
					Me.SendPropertyChanged("usu_codigo")
					Me.Onusu_codigoChanged
				End If
			End Set
		End Property
		
		<Association(Name:="deposito_stock", Storage:="_deposito", ThisKey:="dep_codigo", OtherKey:="dep_codigo", IsForeignKey:=true)>  _
		Public Property deposito() As deposito
			Get
				Return Me._deposito.Entity
			End Get
			Set
				Dim previousValue As deposito = Me._deposito.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._deposito.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._deposito.Entity = Nothing
						previousValue.stocks.Remove(Me)
					End If
					Me._deposito.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.stocks.Add(Me)
						Me._dep_codigo = value.dep_codigo
					Else
						Me._dep_codigo = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("deposito")
				End If
			End Set
		End Property
		
		<Association(Name:="articulo_stock", Storage:="_articulo", ThisKey:="art_codigo", OtherKey:="art_codigo", IsForeignKey:=true)>  _
		Public Property articulo() As articulo
			Get
				Return Me._articulo.Entity
			End Get
			Set
				Dim previousValue As articulo = Me._articulo.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._articulo.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._articulo.Entity = Nothing
						previousValue.stocks.Remove(Me)
					End If
					Me._articulo.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.stocks.Add(Me)
						Me._art_codigo = value.art_codigo
					Else
						Me._art_codigo = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("articulo")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.articulos")>  _
	Partial Public Class articulo
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _art_codigo As Integer
		
		Private _prv_codigo As Integer
		
		Private _art_numero As String
		
		Private _art_barra As String
		
		Private _art_descri As String
		
		Private _art_observ As String
		
		Private _rub_codigo As Integer
		
		Private _sub_codigo As Integer
		
		Private _at1_codigo As Integer
		
		Private _at2_codigo As Integer
		
		Private _at3_codigo As Integer
		
		Private _art_poriva As Decimal
		
		Private _art_costo As Decimal
		
		Private _art_moneda As Char
		
		Private _art_precio As Decimal
		
		Private _art_noveda As Boolean
		
		Private _art_oferta As Boolean
		
		Private _art_stomin As Integer
		
		Private _art_stomax As Integer
		
		Private _art_detall As Boolean
		
		Private _art_activo As Boolean
		
		Private _art_combo As Boolean
		
		Private _pla_codigo As Integer
		
		Private _art_fecalt As Date
		
		Private _usu_codigo As Integer
		
		Private _usu_fecacc As Date
		
		Private _art_fabcodigo As String
		
		Private _mar_codigo As Integer
		
		Private _art_ultfeccom As System.Nullable(Of Date)
		
		Private _art_ultfecmodcos As System.Nullable(Of Date)
		
		Private _art_unicom As Short
		
		Private _art_peso As Decimal
		
		Private _art_descri2 As String
		
		Private _art_impcom As String
		
		Private _art_markup As Decimal
		
		Private _art_impint As Boolean
		
		Private _art_costo_anterior As Decimal
		
		Private _art_despacho As String
		
		Private _art_alto As Decimal
		
		Private _art_ancho As Decimal
		
		Private _art_profundidad As Decimal
		
		Private _stocks As EntitySet(Of stock)
		
		Private _rubro As EntityRef(Of rubro)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onart_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onart_codigoChanged()
    End Sub
    Partial Private Sub Onprv_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onprv_codigoChanged()
    End Sub
    Partial Private Sub Onart_numeroChanging(value As String)
    End Sub
    Partial Private Sub Onart_numeroChanged()
    End Sub
    Partial Private Sub Onart_barraChanging(value As String)
    End Sub
    Partial Private Sub Onart_barraChanged()
    End Sub
    Partial Private Sub Onart_descriChanging(value As String)
    End Sub
    Partial Private Sub Onart_descriChanged()
    End Sub
    Partial Private Sub Onart_observChanging(value As String)
    End Sub
    Partial Private Sub Onart_observChanged()
    End Sub
    Partial Private Sub Onrub_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onrub_codigoChanged()
    End Sub
    Partial Private Sub Onsub_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onsub_codigoChanged()
    End Sub
    Partial Private Sub Onat1_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onat1_codigoChanged()
    End Sub
    Partial Private Sub Onat2_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onat2_codigoChanged()
    End Sub
    Partial Private Sub Onat3_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onat3_codigoChanged()
    End Sub
    Partial Private Sub Onart_porivaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_porivaChanged()
    End Sub
    Partial Private Sub Onart_costoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_costoChanged()
    End Sub
    Partial Private Sub Onart_monedaChanging(value As Char)
    End Sub
    Partial Private Sub Onart_monedaChanged()
    End Sub
    Partial Private Sub Onart_precioChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_precioChanged()
    End Sub
    Partial Private Sub Onart_novedaChanging(value As Boolean)
    End Sub
    Partial Private Sub Onart_novedaChanged()
    End Sub
    Partial Private Sub Onart_ofertaChanging(value As Boolean)
    End Sub
    Partial Private Sub Onart_ofertaChanged()
    End Sub
    Partial Private Sub Onart_stominChanging(value As Integer)
    End Sub
    Partial Private Sub Onart_stominChanged()
    End Sub
    Partial Private Sub Onart_stomaxChanging(value As Integer)
    End Sub
    Partial Private Sub Onart_stomaxChanged()
    End Sub
    Partial Private Sub Onart_detallChanging(value As Boolean)
    End Sub
    Partial Private Sub Onart_detallChanged()
    End Sub
    Partial Private Sub Onart_activoChanging(value As Boolean)
    End Sub
    Partial Private Sub Onart_activoChanged()
    End Sub
    Partial Private Sub Onart_comboChanging(value As Boolean)
    End Sub
    Partial Private Sub Onart_comboChanged()
    End Sub
    Partial Private Sub Onpla_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onpla_codigoChanged()
    End Sub
    Partial Private Sub Onart_fecaltChanging(value As Date)
    End Sub
    Partial Private Sub Onart_fecaltChanged()
    End Sub
    Partial Private Sub Onusu_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onusu_codigoChanged()
    End Sub
    Partial Private Sub Onusu_fecaccChanging(value As Date)
    End Sub
    Partial Private Sub Onusu_fecaccChanged()
    End Sub
    Partial Private Sub Onart_fabcodigoChanging(value As String)
    End Sub
    Partial Private Sub Onart_fabcodigoChanged()
    End Sub
    Partial Private Sub Onmar_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onmar_codigoChanged()
    End Sub
    Partial Private Sub Onart_ultfeccomChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onart_ultfeccomChanged()
    End Sub
    Partial Private Sub Onart_ultfecmodcosChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onart_ultfecmodcosChanged()
    End Sub
    Partial Private Sub Onart_unicomChanging(value As Short)
    End Sub
    Partial Private Sub Onart_unicomChanged()
    End Sub
    Partial Private Sub Onart_pesoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_pesoChanged()
    End Sub
    Partial Private Sub Onart_descri2Changing(value As String)
    End Sub
    Partial Private Sub Onart_descri2Changed()
    End Sub
    Partial Private Sub Onart_impcomChanging(value As String)
    End Sub
    Partial Private Sub Onart_impcomChanged()
    End Sub
    Partial Private Sub Onart_markupChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_markupChanged()
    End Sub
    Partial Private Sub Onart_impintChanging(value As Boolean)
    End Sub
    Partial Private Sub Onart_impintChanged()
    End Sub
    Partial Private Sub Onart_costo_anteriorChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_costo_anteriorChanged()
    End Sub
    Partial Private Sub Onart_despachoChanging(value As String)
    End Sub
    Partial Private Sub Onart_despachoChanged()
    End Sub
    Partial Private Sub Onart_altoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_altoChanged()
    End Sub
    Partial Private Sub Onart_anchoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_anchoChanged()
    End Sub
    Partial Private Sub Onart_profundidadChanging(value As Decimal)
    End Sub
    Partial Private Sub Onart_profundidadChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._stocks = New EntitySet(Of stock)(AddressOf Me.attach_stocks, AddressOf Me.detach_stocks)
			Me._rubro = CType(Nothing, EntityRef(Of rubro))
			OnCreated
		End Sub
		
		<Column(Storage:="_art_codigo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property art_codigo() As Integer
			Get
				Return Me._art_codigo
			End Get
			Set
				If ((Me._art_codigo = value)  _
							= false) Then
					Me.Onart_codigoChanging(value)
					Me.SendPropertyChanging
					Me._art_codigo = value
					Me.SendPropertyChanged("art_codigo")
					Me.Onart_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_prv_codigo", DbType:="Int NOT NULL")>  _
		Public Property prv_codigo() As Integer
			Get
				Return Me._prv_codigo
			End Get
			Set
				If ((Me._prv_codigo = value)  _
							= false) Then
					Me.Onprv_codigoChanging(value)
					Me.SendPropertyChanging
					Me._prv_codigo = value
					Me.SendPropertyChanged("prv_codigo")
					Me.Onprv_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_numero", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
		Public Property art_numero() As String
			Get
				Return Me._art_numero
			End Get
			Set
				If (String.Equals(Me._art_numero, value) = false) Then
					Me.Onart_numeroChanging(value)
					Me.SendPropertyChanging
					Me._art_numero = value
					Me.SendPropertyChanged("art_numero")
					Me.Onart_numeroChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_barra", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
		Public Property art_barra() As String
			Get
				Return Me._art_barra
			End Get
			Set
				If (String.Equals(Me._art_barra, value) = false) Then
					Me.Onart_barraChanging(value)
					Me.SendPropertyChanging
					Me._art_barra = value
					Me.SendPropertyChanged("art_barra")
					Me.Onart_barraChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_descri", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
		Public Property art_descri() As String
			Get
				Return Me._art_descri
			End Get
			Set
				If (String.Equals(Me._art_descri, value) = false) Then
					Me.Onart_descriChanging(value)
					Me.SendPropertyChanging
					Me._art_descri = value
					Me.SendPropertyChanged("art_descri")
					Me.Onart_descriChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_observ", DbType:="Text NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Public Property art_observ() As String
			Get
				Return Me._art_observ
			End Get
			Set
				If (String.Equals(Me._art_observ, value) = false) Then
					Me.Onart_observChanging(value)
					Me.SendPropertyChanging
					Me._art_observ = value
					Me.SendPropertyChanged("art_observ")
					Me.Onart_observChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_rub_codigo", DbType:="Int NOT NULL")>  _
		Public Property rub_codigo() As Integer
			Get
				Return Me._rub_codigo
			End Get
			Set
				If ((Me._rub_codigo = value)  _
							= false) Then
					If Me._rubro.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
					End If
					Me.Onrub_codigoChanging(value)
					Me.SendPropertyChanging
					Me._rub_codigo = value
					Me.SendPropertyChanged("rub_codigo")
					Me.Onrub_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_sub_codigo", DbType:="Int NOT NULL")>  _
		Public Property sub_codigo() As Integer
			Get
				Return Me._sub_codigo
			End Get
			Set
				If ((Me._sub_codigo = value)  _
							= false) Then
					Me.Onsub_codigoChanging(value)
					Me.SendPropertyChanging
					Me._sub_codigo = value
					Me.SendPropertyChanged("sub_codigo")
					Me.Onsub_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_at1_codigo", DbType:="Int NOT NULL")>  _
		Public Property at1_codigo() As Integer
			Get
				Return Me._at1_codigo
			End Get
			Set
				If ((Me._at1_codigo = value)  _
							= false) Then
					Me.Onat1_codigoChanging(value)
					Me.SendPropertyChanging
					Me._at1_codigo = value
					Me.SendPropertyChanged("at1_codigo")
					Me.Onat1_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_at2_codigo", DbType:="Int NOT NULL")>  _
		Public Property at2_codigo() As Integer
			Get
				Return Me._at2_codigo
			End Get
			Set
				If ((Me._at2_codigo = value)  _
							= false) Then
					Me.Onat2_codigoChanging(value)
					Me.SendPropertyChanging
					Me._at2_codigo = value
					Me.SendPropertyChanged("at2_codigo")
					Me.Onat2_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_at3_codigo", DbType:="Int NOT NULL")>  _
		Public Property at3_codigo() As Integer
			Get
				Return Me._at3_codigo
			End Get
			Set
				If ((Me._at3_codigo = value)  _
							= false) Then
					Me.Onat3_codigoChanging(value)
					Me.SendPropertyChanging
					Me._at3_codigo = value
					Me.SendPropertyChanged("at3_codigo")
					Me.Onat3_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_poriva", DbType:="Decimal(5,2) NOT NULL")>  _
		Public Property art_poriva() As Decimal
			Get
				Return Me._art_poriva
			End Get
			Set
				If ((Me._art_poriva = value)  _
							= false) Then
					Me.Onart_porivaChanging(value)
					Me.SendPropertyChanging
					Me._art_poriva = value
					Me.SendPropertyChanged("art_poriva")
					Me.Onart_porivaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_costo", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property art_costo() As Decimal
			Get
				Return Me._art_costo
			End Get
			Set
				If ((Me._art_costo = value)  _
							= false) Then
					Me.Onart_costoChanging(value)
					Me.SendPropertyChanging
					Me._art_costo = value
					Me.SendPropertyChanged("art_costo")
					Me.Onart_costoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_moneda", DbType:="Char(1) NOT NULL")>  _
		Public Property art_moneda() As Char
			Get
				Return Me._art_moneda
			End Get
			Set
				If ((Me._art_moneda = value)  _
							= false) Then
					Me.Onart_monedaChanging(value)
					Me.SendPropertyChanging
					Me._art_moneda = value
					Me.SendPropertyChanged("art_moneda")
					Me.Onart_monedaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_precio", DbType:="Decimal(12,2) NOT NULL")>  _
		Public Property art_precio() As Decimal
			Get
				Return Me._art_precio
			End Get
			Set
				If ((Me._art_precio = value)  _
							= false) Then
					Me.Onart_precioChanging(value)
					Me.SendPropertyChanging
					Me._art_precio = value
					Me.SendPropertyChanged("art_precio")
					Me.Onart_precioChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_noveda", DbType:="Bit NOT NULL")>  _
		Public Property art_noveda() As Boolean
			Get
				Return Me._art_noveda
			End Get
			Set
				If ((Me._art_noveda = value)  _
							= false) Then
					Me.Onart_novedaChanging(value)
					Me.SendPropertyChanging
					Me._art_noveda = value
					Me.SendPropertyChanged("art_noveda")
					Me.Onart_novedaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_oferta", DbType:="Bit NOT NULL")>  _
		Public Property art_oferta() As Boolean
			Get
				Return Me._art_oferta
			End Get
			Set
				If ((Me._art_oferta = value)  _
							= false) Then
					Me.Onart_ofertaChanging(value)
					Me.SendPropertyChanging
					Me._art_oferta = value
					Me.SendPropertyChanged("art_oferta")
					Me.Onart_ofertaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_stomin", DbType:="Int NOT NULL")>  _
		Public Property art_stomin() As Integer
			Get
				Return Me._art_stomin
			End Get
			Set
				If ((Me._art_stomin = value)  _
							= false) Then
					Me.Onart_stominChanging(value)
					Me.SendPropertyChanging
					Me._art_stomin = value
					Me.SendPropertyChanged("art_stomin")
					Me.Onart_stominChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_stomax", DbType:="Int NOT NULL")>  _
		Public Property art_stomax() As Integer
			Get
				Return Me._art_stomax
			End Get
			Set
				If ((Me._art_stomax = value)  _
							= false) Then
					Me.Onart_stomaxChanging(value)
					Me.SendPropertyChanging
					Me._art_stomax = value
					Me.SendPropertyChanged("art_stomax")
					Me.Onart_stomaxChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_detall", DbType:="Bit NOT NULL")>  _
		Public Property art_detall() As Boolean
			Get
				Return Me._art_detall
			End Get
			Set
				If ((Me._art_detall = value)  _
							= false) Then
					Me.Onart_detallChanging(value)
					Me.SendPropertyChanging
					Me._art_detall = value
					Me.SendPropertyChanged("art_detall")
					Me.Onart_detallChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_activo", DbType:="Bit NOT NULL")>  _
		Public Property art_activo() As Boolean
			Get
				Return Me._art_activo
			End Get
			Set
				If ((Me._art_activo = value)  _
							= false) Then
					Me.Onart_activoChanging(value)
					Me.SendPropertyChanging
					Me._art_activo = value
					Me.SendPropertyChanged("art_activo")
					Me.Onart_activoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_combo", DbType:="Bit NOT NULL")>  _
		Public Property art_combo() As Boolean
			Get
				Return Me._art_combo
			End Get
			Set
				If ((Me._art_combo = value)  _
							= false) Then
					Me.Onart_comboChanging(value)
					Me.SendPropertyChanging
					Me._art_combo = value
					Me.SendPropertyChanged("art_combo")
					Me.Onart_comboChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_pla_codigo", DbType:="Int NOT NULL")>  _
		Public Property pla_codigo() As Integer
			Get
				Return Me._pla_codigo
			End Get
			Set
				If ((Me._pla_codigo = value)  _
							= false) Then
					Me.Onpla_codigoChanging(value)
					Me.SendPropertyChanging
					Me._pla_codigo = value
					Me.SendPropertyChanged("pla_codigo")
					Me.Onpla_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_fecalt", DbType:="DateTime NOT NULL")>  _
		Public Property art_fecalt() As Date
			Get
				Return Me._art_fecalt
			End Get
			Set
				If ((Me._art_fecalt = value)  _
							= false) Then
					Me.Onart_fecaltChanging(value)
					Me.SendPropertyChanging
					Me._art_fecalt = value
					Me.SendPropertyChanged("art_fecalt")
					Me.Onart_fecaltChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_codigo", DbType:="Int NOT NULL")>  _
		Public Property usu_codigo() As Integer
			Get
				Return Me._usu_codigo
			End Get
			Set
				If ((Me._usu_codigo = value)  _
							= false) Then
					Me.Onusu_codigoChanging(value)
					Me.SendPropertyChanging
					Me._usu_codigo = value
					Me.SendPropertyChanged("usu_codigo")
					Me.Onusu_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_fecacc", DbType:="DateTime NOT NULL")>  _
		Public Property usu_fecacc() As Date
			Get
				Return Me._usu_fecacc
			End Get
			Set
				If ((Me._usu_fecacc = value)  _
							= false) Then
					Me.Onusu_fecaccChanging(value)
					Me.SendPropertyChanging
					Me._usu_fecacc = value
					Me.SendPropertyChanged("usu_fecacc")
					Me.Onusu_fecaccChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_fabcodigo", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
		Public Property art_fabcodigo() As String
			Get
				Return Me._art_fabcodigo
			End Get
			Set
				If (String.Equals(Me._art_fabcodigo, value) = false) Then
					Me.Onart_fabcodigoChanging(value)
					Me.SendPropertyChanging
					Me._art_fabcodigo = value
					Me.SendPropertyChanged("art_fabcodigo")
					Me.Onart_fabcodigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_mar_codigo", DbType:="Int NOT NULL")>  _
		Public Property mar_codigo() As Integer
			Get
				Return Me._mar_codigo
			End Get
			Set
				If ((Me._mar_codigo = value)  _
							= false) Then
					Me.Onmar_codigoChanging(value)
					Me.SendPropertyChanging
					Me._mar_codigo = value
					Me.SendPropertyChanged("mar_codigo")
					Me.Onmar_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_ultfeccom", DbType:="DateTime")>  _
		Public Property art_ultfeccom() As System.Nullable(Of Date)
			Get
				Return Me._art_ultfeccom
			End Get
			Set
				If (Me._art_ultfeccom.Equals(value) = false) Then
					Me.Onart_ultfeccomChanging(value)
					Me.SendPropertyChanging
					Me._art_ultfeccom = value
					Me.SendPropertyChanged("art_ultfeccom")
					Me.Onart_ultfeccomChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_ultfecmodcos", DbType:="DateTime")>  _
		Public Property art_ultfecmodcos() As System.Nullable(Of Date)
			Get
				Return Me._art_ultfecmodcos
			End Get
			Set
				If (Me._art_ultfecmodcos.Equals(value) = false) Then
					Me.Onart_ultfecmodcosChanging(value)
					Me.SendPropertyChanging
					Me._art_ultfecmodcos = value
					Me.SendPropertyChanged("art_ultfecmodcos")
					Me.Onart_ultfecmodcosChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_unicom", DbType:="SmallInt NOT NULL")>  _
		Public Property art_unicom() As Short
			Get
				Return Me._art_unicom
			End Get
			Set
				If ((Me._art_unicom = value)  _
							= false) Then
					Me.Onart_unicomChanging(value)
					Me.SendPropertyChanging
					Me._art_unicom = value
					Me.SendPropertyChanged("art_unicom")
					Me.Onart_unicomChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_peso", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property art_peso() As Decimal
			Get
				Return Me._art_peso
			End Get
			Set
				If ((Me._art_peso = value)  _
							= false) Then
					Me.Onart_pesoChanging(value)
					Me.SendPropertyChanging
					Me._art_peso = value
					Me.SendPropertyChanged("art_peso")
					Me.Onart_pesoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_descri2", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
		Public Property art_descri2() As String
			Get
				Return Me._art_descri2
			End Get
			Set
				If (String.Equals(Me._art_descri2, value) = false) Then
					Me.Onart_descri2Changing(value)
					Me.SendPropertyChanging
					Me._art_descri2 = value
					Me.SendPropertyChanged("art_descri2")
					Me.Onart_descri2Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_impcom", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property art_impcom() As String
			Get
				Return Me._art_impcom
			End Get
			Set
				If (String.Equals(Me._art_impcom, value) = false) Then
					Me.Onart_impcomChanging(value)
					Me.SendPropertyChanging
					Me._art_impcom = value
					Me.SendPropertyChanged("art_impcom")
					Me.Onart_impcomChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_markup", DbType:="Decimal(5,2) NOT NULL")>  _
		Public Property art_markup() As Decimal
			Get
				Return Me._art_markup
			End Get
			Set
				If ((Me._art_markup = value)  _
							= false) Then
					Me.Onart_markupChanging(value)
					Me.SendPropertyChanging
					Me._art_markup = value
					Me.SendPropertyChanged("art_markup")
					Me.Onart_markupChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_impint", DbType:="Bit NOT NULL")>  _
		Public Property art_impint() As Boolean
			Get
				Return Me._art_impint
			End Get
			Set
				If ((Me._art_impint = value)  _
							= false) Then
					Me.Onart_impintChanging(value)
					Me.SendPropertyChanging
					Me._art_impint = value
					Me.SendPropertyChanged("art_impint")
					Me.Onart_impintChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_costo_anterior", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property art_costo_anterior() As Decimal
			Get
				Return Me._art_costo_anterior
			End Get
			Set
				If ((Me._art_costo_anterior = value)  _
							= false) Then
					Me.Onart_costo_anteriorChanging(value)
					Me.SendPropertyChanging
					Me._art_costo_anterior = value
					Me.SendPropertyChanged("art_costo_anterior")
					Me.Onart_costo_anteriorChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_despacho", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property art_despacho() As String
			Get
				Return Me._art_despacho
			End Get
			Set
				If (String.Equals(Me._art_despacho, value) = false) Then
					Me.Onart_despachoChanging(value)
					Me.SendPropertyChanging
					Me._art_despacho = value
					Me.SendPropertyChanged("art_despacho")
					Me.Onart_despachoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_alto", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property art_alto() As Decimal
			Get
				Return Me._art_alto
			End Get
			Set
				If ((Me._art_alto = value)  _
							= false) Then
					Me.Onart_altoChanging(value)
					Me.SendPropertyChanging
					Me._art_alto = value
					Me.SendPropertyChanged("art_alto")
					Me.Onart_altoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_ancho", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property art_ancho() As Decimal
			Get
				Return Me._art_ancho
			End Get
			Set
				If ((Me._art_ancho = value)  _
							= false) Then
					Me.Onart_anchoChanging(value)
					Me.SendPropertyChanging
					Me._art_ancho = value
					Me.SendPropertyChanged("art_ancho")
					Me.Onart_anchoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_art_profundidad", DbType:="Decimal(9,2) NOT NULL")>  _
		Public Property art_profundidad() As Decimal
			Get
				Return Me._art_profundidad
			End Get
			Set
				If ((Me._art_profundidad = value)  _
							= false) Then
					Me.Onart_profundidadChanging(value)
					Me.SendPropertyChanging
					Me._art_profundidad = value
					Me.SendPropertyChanged("art_profundidad")
					Me.Onart_profundidadChanged
				End If
			End Set
		End Property
		
		<Association(Name:="articulo_stock", Storage:="_stocks", ThisKey:="art_codigo", OtherKey:="art_codigo")>  _
		Public Property stocks() As EntitySet(Of stock)
			Get
				Return Me._stocks
			End Get
			Set
				Me._stocks.Assign(value)
			End Set
		End Property
		
		<Association(Name:="rubro_articulo", Storage:="_rubro", ThisKey:="rub_codigo", OtherKey:="rub_codigo", IsForeignKey:=true)>  _
		Public Property rubro() As rubro
			Get
				Return Me._rubro.Entity
			End Get
			Set
				Dim previousValue As rubro = Me._rubro.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._rubro.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._rubro.Entity = Nothing
						previousValue.articulos.Remove(Me)
					End If
					Me._rubro.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.articulos.Add(Me)
						Me._rub_codigo = value.rub_codigo
					Else
						Me._rub_codigo = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("rubro")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_stocks(ByVal entity As stock)
			Me.SendPropertyChanging
			entity.articulo = Me
		End Sub
		
		Private Sub detach_stocks(ByVal entity As stock)
			Me.SendPropertyChanging
			entity.articulo = Nothing
		End Sub
	End Class
	
	<Table(Name:="dbo.rubros")>  _
	Partial Public Class rubro
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _rub_codigo As Integer
		
		Private _rub_descri As String
		
		Private _articulos As EntitySet(Of articulo)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onrub_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Onrub_codigoChanged()
    End Sub
    Partial Private Sub Onrub_descriChanging(value As String)
    End Sub
    Partial Private Sub Onrub_descriChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._articulos = New EntitySet(Of articulo)(AddressOf Me.attach_articulos, AddressOf Me.detach_articulos)
			OnCreated
		End Sub
		
		<Column(Storage:="_rub_codigo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property rub_codigo() As Integer
			Get
				Return Me._rub_codigo
			End Get
			Set
				If ((Me._rub_codigo = value)  _
							= false) Then
					Me.Onrub_codigoChanging(value)
					Me.SendPropertyChanging
					Me._rub_codigo = value
					Me.SendPropertyChanged("rub_codigo")
					Me.Onrub_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_rub_descri", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
		Public Property rub_descri() As String
			Get
				Return Me._rub_descri
			End Get
			Set
				If (String.Equals(Me._rub_descri, value) = false) Then
					Me.Onrub_descriChanging(value)
					Me.SendPropertyChanging
					Me._rub_descri = value
					Me.SendPropertyChanged("rub_descri")
					Me.Onrub_descriChanged
				End If
			End Set
		End Property
		
		<Association(Name:="rubro_articulo", Storage:="_articulos", ThisKey:="rub_codigo", OtherKey:="rub_codigo")>  _
		Public Property articulos() As EntitySet(Of articulo)
			Get
				Return Me._articulos
			End Get
			Set
				Me._articulos.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_articulos(ByVal entity As articulo)
			Me.SendPropertyChanging
			entity.rubro = Me
		End Sub
		
		Private Sub detach_articulos(ByVal entity As articulo)
			Me.SendPropertyChanging
			entity.rubro = Nothing
		End Sub
	End Class
	
	<Table(Name:="dbo.dolar")>  _
	Partial Public Class dolar
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _dol_fecha As Date
		
		Private _dol_compra As Decimal
		
		Private _dol_venta As Decimal
		
		Private _dol_codigo As Integer
		
		Private _dol_venta_bna As Decimal
		
		Private _usu_fecalt As Date
		
		Private _usu_codigo_alt As Integer
		
		Private _usu_fecacc As Date
		
		Private _usu_codigo_edi As Integer
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ondol_fechaChanging(value As Date)
    End Sub
    Partial Private Sub Ondol_fechaChanged()
    End Sub
    Partial Private Sub Ondol_compraChanging(value As Decimal)
    End Sub
    Partial Private Sub Ondol_compraChanged()
    End Sub
    Partial Private Sub Ondol_ventaChanging(value As Decimal)
    End Sub
    Partial Private Sub Ondol_ventaChanged()
    End Sub
    Partial Private Sub Ondol_codigoChanging(value As Integer)
    End Sub
    Partial Private Sub Ondol_codigoChanged()
    End Sub
    Partial Private Sub Ondol_venta_bnaChanging(value As Decimal)
    End Sub
    Partial Private Sub Ondol_venta_bnaChanged()
    End Sub
    Partial Private Sub Onusu_fecaltChanging(value As Date)
    End Sub
    Partial Private Sub Onusu_fecaltChanged()
    End Sub
    Partial Private Sub Onusu_codigo_altChanging(value As Integer)
    End Sub
    Partial Private Sub Onusu_codigo_altChanged()
    End Sub
    Partial Private Sub Onusu_fecaccChanging(value As Date)
    End Sub
    Partial Private Sub Onusu_fecaccChanged()
    End Sub
    Partial Private Sub Onusu_codigo_ediChanging(value As Integer)
    End Sub
    Partial Private Sub Onusu_codigo_ediChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Storage:="_dol_fecha", DbType:="SmallDateTime NOT NULL", IsPrimaryKey:=true)>  _
		Public Property dol_fecha() As Date
			Get
				Return Me._dol_fecha
			End Get
			Set
				If ((Me._dol_fecha = value)  _
							= false) Then
					Me.Ondol_fechaChanging(value)
					Me.SendPropertyChanging
					Me._dol_fecha = value
					Me.SendPropertyChanged("dol_fecha")
					Me.Ondol_fechaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dol_compra", DbType:="Decimal(7,3) NOT NULL")>  _
		Public Property dol_compra() As Decimal
			Get
				Return Me._dol_compra
			End Get
			Set
				If ((Me._dol_compra = value)  _
							= false) Then
					Me.Ondol_compraChanging(value)
					Me.SendPropertyChanging
					Me._dol_compra = value
					Me.SendPropertyChanged("dol_compra")
					Me.Ondol_compraChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dol_venta", DbType:="Decimal(7,3) NOT NULL")>  _
		Public Property dol_venta() As Decimal
			Get
				Return Me._dol_venta
			End Get
			Set
				If ((Me._dol_venta = value)  _
							= false) Then
					Me.Ondol_ventaChanging(value)
					Me.SendPropertyChanging
					Me._dol_venta = value
					Me.SendPropertyChanged("dol_venta")
					Me.Ondol_ventaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dol_codigo", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
		Public Property dol_codigo() As Integer
			Get
				Return Me._dol_codigo
			End Get
			Set
				If ((Me._dol_codigo = value)  _
							= false) Then
					Me.Ondol_codigoChanging(value)
					Me.SendPropertyChanging
					Me._dol_codigo = value
					Me.SendPropertyChanged("dol_codigo")
					Me.Ondol_codigoChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_dol_venta_bna", DbType:="Decimal(7,3) NOT NULL")>  _
		Public Property dol_venta_bna() As Decimal
			Get
				Return Me._dol_venta_bna
			End Get
			Set
				If ((Me._dol_venta_bna = value)  _
							= false) Then
					Me.Ondol_venta_bnaChanging(value)
					Me.SendPropertyChanging
					Me._dol_venta_bna = value
					Me.SendPropertyChanged("dol_venta_bna")
					Me.Ondol_venta_bnaChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_fecalt", DbType:="DateTime NOT NULL")>  _
		Public Property usu_fecalt() As Date
			Get
				Return Me._usu_fecalt
			End Get
			Set
				If ((Me._usu_fecalt = value)  _
							= false) Then
					Me.Onusu_fecaltChanging(value)
					Me.SendPropertyChanging
					Me._usu_fecalt = value
					Me.SendPropertyChanged("usu_fecalt")
					Me.Onusu_fecaltChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_codigo_alt", DbType:="Int NOT NULL")>  _
		Public Property usu_codigo_alt() As Integer
			Get
				Return Me._usu_codigo_alt
			End Get
			Set
				If ((Me._usu_codigo_alt = value)  _
							= false) Then
					Me.Onusu_codigo_altChanging(value)
					Me.SendPropertyChanging
					Me._usu_codigo_alt = value
					Me.SendPropertyChanged("usu_codigo_alt")
					Me.Onusu_codigo_altChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_fecacc", DbType:="DateTime NOT NULL")>  _
		Public Property usu_fecacc() As Date
			Get
				Return Me._usu_fecacc
			End Get
			Set
				If ((Me._usu_fecacc = value)  _
							= false) Then
					Me.Onusu_fecaccChanging(value)
					Me.SendPropertyChanging
					Me._usu_fecacc = value
					Me.SendPropertyChanged("usu_fecacc")
					Me.Onusu_fecaccChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_usu_codigo_edi", DbType:="Int NOT NULL")>  _
		Public Property usu_codigo_edi() As Integer
			Get
				Return Me._usu_codigo_edi
			End Get
			Set
				If ((Me._usu_codigo_edi = value)  _
							= false) Then
					Me.Onusu_codigo_ediChanging(value)
					Me.SendPropertyChanging
					Me._usu_codigo_edi = value
					Me.SendPropertyChanged("usu_codigo_edi")
					Me.Onusu_codigo_ediChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
